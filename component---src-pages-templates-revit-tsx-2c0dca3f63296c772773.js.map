{"version":3,"file":"component---src-pages-templates-revit-tsx-2c0dca3f63296c772773.js","mappings":"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","sources":["webpack://code-cave/./src/components/common/metadata.tsx","webpack://code-cave/./src/pagesTemplates/revit.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { ILayoutMarkupData } from \"../../types/commonMarkup.type\";\nimport { ILang, TLang } from \"../../types/common.type\";\nimport { Helmet } from \"react-helmet\";\n\nconst getAddress = (lang: TLang): string => {\n  const requisitesData = useStaticQuery(query) as {\n    allMarkdownRemark?: {\n      nodes?:\n        | {\n            fields: { language: string };\n            frontmatter: { layout: ILayoutMarkupData };\n          }[]\n        | null;\n    };\n  };\n\n  const requisites = requisitesData?.allMarkdownRemark?.nodes?.find(\n    (node) => node.fields.language === lang\n  )?.frontmatter?.layout?.requisites;\n\n  const address = requisites\n    ? Object.entries(requisites)\n        .map(([_, value]) => value)\n        .join(\" \")\n    : \"\";\n\n  return address;\n};\n\ninterface HeadSeoProps extends ILang {\n  title: string;\n  description?: string;\n  img?: string;\n  siteUrl: string;\n  path: string;\n  canonicalUrl?: string;\n}\n\nexport const HeadSeo = ({\n  title,\n  description,\n  img,\n  siteUrl,\n  path,\n  lang,\n  canonicalUrl,\n}: HeadSeoProps) => {\n  const descriptionText = description ?? title;\n  const pageUrl = `${siteUrl}${path}`;\n  const imgUrl = img ? `${siteUrl}${img}` : `${siteUrl}/siteImage.png`;\n  const locale = lang === \"ru\" ? \"ru_RU\" : \"en_US\";\n\n  return (\n    <>\n      <Helmet\n      title={title}\n    >\n      {canonicalUrl && <link rel=\"canonical\" key={canonicalUrl} href={canonicalUrl}/>}\n      <link rel=\"shortcut icon\" href={`/favicon.ico`} />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={`/apple-touch-icon.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href={`/favicon-32x32.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href={`/favicon-16x16.png`}\n      />\n      <link rel=\"manifest\" href={`/site.webmanifest`} />\n      <link rel=\"mask-icon\" href={`/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n      <link rel=\"icon\" sizes=\"16x16 32x32 64x64\" href={`/favicon.ico`} />\n      <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n      <meta name=\"msapplication-config\" content=\"/browserconfig.xml\" />\n      <meta name=\"msapplication-TileImage\" content={`/mstile-150x150.png`} />\n\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={descriptionText} />\n      <meta property=\"image\" content={imgUrl} />\n      <meta itemProp=\"image\" content={imgUrl} />\n      <meta property=\"url\" content={pageUrl} />\n\n      <meta property=\"og:locale\" content={locale} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={pageUrl} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={descriptionText} />\n      <meta property=\"og:image\" content={imgUrl} />\n\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:url\" content={pageUrl} />\n      <meta property=\"twitter:title\" content={title} />\n      <meta property=\"twitter:description\" content={descriptionText} />\n      <meta property=\"twitter:image\" content={imgUrl} />\n\n      <meta itemProp=\"sameAs\" content=\"https://www.pinterest.com/codecave_pro\" />\n      <meta itemProp=\"sameAs\" content=\"https://t.me/codecave_pro\" />\n      <meta itemProp=\"sameAs\" content=\"https://www.facebook.com/codecave.company\" />\n      <meta itemProp=\"sameAs\" content=\"https://www.youtube.com/@codecave_pro\" />\n      <meta itemProp=\"sameAs\" content=\"https://x.com/codecave_pro\" />\n      <meta itemProp=\"sameAs\" content=\"https://vk.com/codecave_pro\" />\n      <meta itemProp=\"sameAs\" content=\"https://github.com/CodeCavePro\" />\n      <meta itemProp=\"sameAs\" content=\"https://instagram.com/codecave_pro\" />\n      <meta\n        itemProp=\"sameAs\"\n        content=\"https://www.linkedin.com/company/codecave\"\n      />\n    </Helmet>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"common\" } } }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        fields {\n          language\n        }\n        frontmatter {\n          layout {\n            requisites {\n              ein\n              companyCode\n              street\n              city\n              postalCode\n              country\n              phone\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { HeadFC, HeadProps, PageProps, graphql } from \"gatsby\";\nimport React from \"react\";\nimport ContentContainer from \"../components/common/contentContainer\";\nimport { HeadSeo } from \"../components/common/metadata\";\nimport { IRevitPageContext, IRevitQueryResult } from \"../types/revit.type\";\n\nconst RevitPage = ({\n  data, pageContext\n}: PageProps<IRevitQueryResult, IRevitPageContext>) => {\n  const elements = data.allMarkdownRemark.nodes;\n  const { markupData } = pageContext;\n\n  return (\n    <ContentContainer\n      className=\"flex-col text-secondary-100 text-lg pt-8 sm:pt-16\">\n      <div className=\"bg-[#222123] rounded-[2rem] p-16 flex flex-col gap-6 mb-8\">\n        <p className=\"font-bold\">{markupData.title}</p>\n        <h1 className=\"font-extrabold text-[3.5rem]\">{markupData.head}</h1>\n        <h2>{markupData.subhead}</h2>\n      </div>\n      {elements.map((e) => (\n        <div\n          key={e.frontmatter.link}\n          id={e.frontmatter.link}\n          className=\"bg-[#222123] rounded-[2rem] p-16 mb-8\">\n          <a href={`#${e.frontmatter.link}`}>\n            <h2 className=\"text-[2.5rem] leading-[3rem] font-bold text-left mb-6\">\n              {e.frontmatter.title}\n            </h2>\n          </a>\n          <article\n            className=\"single-post revit\"\n            dangerouslySetInnerHTML={{ __html: e.html }}\n            itemProp=\"articleBody\"\n          />\n        </div>\n      ))}\n    </ContentContainer>\n  );\n};\n\nexport default RevitPage;\n\nexport const Head: HeadFC<IRevitQueryResult, IRevitPageContext> = ({\n  pageContext: { markupData, lang, site },\n  location,\n}: HeadProps<IRevitQueryResult, IRevitPageContext>) => (\n  <HeadSeo\n    title={`${markupData.head} | ${markupData.subhead.toUpperCase()}`}\n    siteUrl={site.siteUrl}\n    description={site.description}\n    path={location.pathname}\n    lang={lang}\n  />\n);\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"revit\" }, language: { eq: \"en\" } }\n      }\n    ) {\n      nodes {\n        id\n        html\n        frontmatter {\n          title\n          link\n        }\n      }\n    }\n  }\n`;\n"],"names":["HeadSeo","_ref2","title","description","img","siteUrl","path","lang","canonicalUrl","descriptionText","pageUrl","imgUrl","locale","___EmotionJSX","React","Helmet","rel","key","href","sizes","type","color","name","content","property","itemProp","_ref","data","pageContext","elements","allMarkdownRemark","nodes","markupData","ContentContainer","className","head","subhead","map","e","frontmatter","link","id","dangerouslySetInnerHTML","__html","html","Head","site","location","toUpperCase","pathname"],"sourceRoot":""}