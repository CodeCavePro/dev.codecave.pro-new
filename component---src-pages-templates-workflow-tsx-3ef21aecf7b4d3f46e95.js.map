{"version":3,"file":"component---src-pages-templates-workflow-tsx-3ef21aecf7b4d3f46e95.js","mappings":"8NAiDA,MA7CqBA,IAUd,IAVe,KACpBC,EAAI,OACJC,EAAM,WACNC,EAAU,UACVC,GAMDJ,EACC,MAAMK,GAAMC,EAAAA,EAAAA,QAAuB,OAC7B,EAACC,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAA8C,cAElFC,EAAAA,EAAAA,YAAU,KACR,IAAKL,EAAIM,UAAYC,OAAQ,OAC7B,MAAMC,EAAYR,EAAIM,QAAQG,wBAAwBC,OAElDH,OAAOI,YAAcH,GAAWL,EAAc,sBAAsB,GACvE,CAACN,IAEJ,MAAM,KACJe,EACAC,aAAa,MAAEC,IACblB,EAEJ,OACEmB,EAAAA,EAAAA,GAAA,OACEC,IAAKhB,EACLD,UAAW,kHAAkHA,KAAaG,MAE1Ia,EAAAA,EAAAA,GAAA,KAAGhB,UAAU,iGACVD,IAEHiB,EAAAA,EAAAA,GAAA,OAAKhB,UAAU,iCACbgB,EAAAA,EAAAA,GAAA,MAAIhB,UAAU,kCAAkCe,IAChDC,EAAAA,EAAAA,GAAA,OACEhB,UAAU,6BACVkB,wBAAyB,CAAEC,OAAQN,MAGnC,E,8BCfV,MA1BoBjB,IASb,IARLwB,QACEN,aAAa,MAAEC,GAAO,KACtBF,GACD,UACDb,GAIDJ,EACC,OACEoB,EAAAA,EAAAA,GAAA,OACEhB,UAAW,+GAA+GA,MAE1HgB,EAAAA,EAAAA,GAAA,MAAIhB,UAAU,YAAYe,IAC1BC,EAAAA,EAAAA,GAAA,OACEhB,UAAW,6BACXkB,wBAAyB,CAAEC,OAAQN,MAErCG,EAAAA,EAAAA,GAAA,OACEhB,UAAW,8IAET,ECuBV,MAxCqBJ,IAAsB,IAADyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAApB,KAAEC,GAAalC,EACnC,MAAMmC,GAAiBC,EAAAA,EAAAA,IAAeC,GAEtC,IAAIC,EACAJ,KAAQC,EACVG,EAAeH,SAAsB,QAARV,EAAdU,EAAiBD,UAAK,IAAAT,OAAR,EAAdA,EAAwBc,MAIpCJ,SAAkB,QAAJT,EAAdS,EAAgBK,UAAE,IAAAd,GAAlBA,EAAoBa,MAEzB,MAAME,EAGwB,QAHZd,EAChBQ,SAA0B,QAAZP,EAAdO,EAAgBO,kBAAU,IAAAd,GAAO,QAAPC,EAA1BD,EAA4BW,aAAK,IAAAV,GAEhC,QAFgCC,EAAjCD,EAAmCc,MAChCC,GAASA,EAAKC,OAAOC,WAAaZ,WACpC,IAAAJ,GAAa,QAAbC,EAFDD,EAEGZ,mBAAW,IAAAa,GAAO,QAAPC,EAFdD,EAEgBgB,aAAK,IAAAf,OAFP,EAAdA,EAEuBb,aAAK,IAAAQ,EAAAA,EAAI,SAElC,OACEP,EAAAA,EAAAA,GAAA4B,EAAAA,SAAA,KACe,QAAZf,EAAAK,SAAY,IAAAL,GAAZA,EAAcgB,QACb7B,EAAAA,EAAAA,GAAC8B,EAAAA,EAAe,CAACC,MAAOC,EAAAA,EAAMC,KAAMlC,MAAOsB,IACzCrB,EAAAA,EAAAA,GAAA,OAAKhB,UAAU,kEACbgB,EAAAA,EAAAA,GAAA,OAAKhB,UAAU,0DACZkC,EAAagB,KACZ,CAAC9B,EAAQ+B,IACPA,EAAI,GAAM,IAAKnC,EAAAA,EAAAA,GAACoC,EAAW,CAACC,IAAKjC,EAAOkC,GAAIlC,OAAQA,QAG1DJ,EAAAA,EAAAA,GAAA,OAAKhB,UAAU,0DACZkC,EAAagB,KACZ,CAAC9B,EAAQ+B,IACPA,EAAI,GAAK,IAAKnC,EAAAA,EAAAA,GAACoC,EAAW,CAACC,IAAKjC,EAAOkC,GAAIlC,OAAQA,SAK3D,KACH,EAMP,MAAMa,EAAK,Y,wBCeX,MAlDiBrC,IAGiD,IAHhD,KAChB2D,EACAC,aAAa,WAAElB,EAAU,KAAER,IACgClC,EAC3D,MAAM6D,EAAgBF,EAAKG,kBAAkBvB,MAEvCwB,GAAYzD,EAAAA,EAAAA,SAAgB,IAC5B,EAACJ,EAAM,EAAE8D,IAAavD,EAAAA,EAAAA,WAAkB,GAExCwD,EAAgBA,KACpBD,GAAW9D,IAAYA,GAAO,EAYhC,OATAQ,EAAAA,EAAAA,YAAU,KACR,GAAKqD,EAAUpD,SAAYC,OAK3B,OAJAmD,EAAUpD,SAAU,EAEpBC,OAAOsD,iBAAiB,SAAUD,GAE3B,IAAMrD,OAAOuD,oBAAoB,SAAUF,EAAc,GAC/D,KAGD7C,EAAAA,EAAAA,GAAA4B,EAAAA,SAAA,MACE5B,EAAAA,EAAAA,GAACgD,EAAAA,EAAM,CACLC,YAAY,UACZC,oBAAoB,SACpBnD,MAAOuB,EAAW6B,eAEpBnD,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAACoD,EAAAA,EAAgB,CAACpE,UAAU,uDACzByD,EACGA,EAAcP,KAAI,CAACrD,EAAMsD,KACvBnC,EAAAA,EAAAA,GAACqD,EAAY,CACXhB,IAAKxD,EAAKyD,GACVzD,KAAMA,EACNG,UAAU,wBACVF,OAAQA,EACRC,WAAYoD,EAAI,MAGpB,QAGRnC,EAAAA,EAAAA,GAACsD,EAAY,CAACxC,KAAMA,KACpBd,EAAAA,EAAAA,GAACuD,EAAAA,EAAkB,CAACzC,KAAMA,IACzB,EAMA,MAAM0C,EAAgEC,IAAA,IAC3EjB,aAAa,WAAElB,EAAU,KAAEoC,EAAI,KAAE5C,GAAM,SACvC6C,GAC2DF,EAAA,OAC3DzD,EAAAA,EAAAA,GAAC4D,EAAAA,EAAO,CACN7D,MAAO,GAAGuB,EAAWuC,UAAUvC,EAAW6B,YAAYW,gBACtDC,YAAaL,EAAKK,YAClBC,QAASN,EAAKM,QACdC,KAAMN,EAASO,SACfpD,KAAMA,GACN,C,yGCGJ,IA5DwBlC,IAYyB,IAZxB,QACvBuF,EAAO,MACPpC,EAAK,MACLhC,EAAK,UACLqE,EAAS,SACTC,EAAQ,UACRrF,EAAS,SACTsF,EAAQ,QACRC,EAAO,QACPC,EAAO,YACPC,GAAc,KACXC,GACsC9F,EACzC,MAAM+F,EACJ5C,IAAUC,EAAAA,EAAMC,KAAO,qBAAuB,gBAC1C2C,EACJ7C,IAAUC,EAAAA,EAAMC,KACZ,6CACA,mCAEN,OACEjC,EAAAA,EAAAA,GAAA4B,EAAAA,SAAA,KACG2C,GAAUvE,EAAAA,EAAAA,GAAC6E,IAAM,CAAC7F,UAAU,WAAc,MAC3CgB,EAAAA,EAAAA,GAAA,WAAA8E,EAAAA,EAAAA,GAAA,CACE9F,UAAW,+BAA+BA,KACtC0F,IAEJ1E,EAAAA,EAAAA,GAACoD,EAAAA,EAAgB,CACf2B,cAAc,iBACd/F,UAAW,yBAAyB2F,MAEpC3E,EAAAA,EAAAA,GAAA,OAAKhB,UAAU,yFACbgB,EAAAA,EAAAA,GAAA,MAAIhB,UAAW,6BAA6B2F,KACzC5E,EAAM+D,eAERK,GACCnE,EAAAA,EAAAA,GAACgF,EAAAA,GAAI,CACHC,GAAI,IAAId,IACRnF,UAAW,gGAAgG4F,KAE1GR,EAAYA,EAAUN,cAAgB,gBAAiB,IACvDW,GAAczE,EAAAA,EAAAA,GAAA4B,EAAAA,SAAA,KAAE,KAAa,MAE9B,KACHyC,GACCrE,EAAAA,EAAAA,GAAA,KACEhB,UAAW,sEAAsE2F,KAEhFN,EAASP,eAEV,MAELQ,IAGJE,GAAUxE,EAAAA,EAAAA,GAAC6E,IAAM,CAAC7F,UAAU,WAAc,KAC1C,C","sources":["webpack://code-cave/./src/components/workflow/workflowStep.tsx","webpack://code-cave/./src/components/whyUs/whyUsReason.tsx","webpack://code-cave/./src/components/whyUs/whyUsSection.tsx","webpack://code-cave/./src/pagesTemplates/workflow.tsx","webpack://code-cave/./src/components/common/templateSection.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport { IWorkflowStep } from \"../../types/workflow.type\";\n\nconst WorkflowStep = ({\n  step,\n  scroll,\n  stepNumber,\n  className,\n}: {\n  step: IWorkflowStep;\n  scroll: boolean;\n  stepNumber: number;\n  className?: string;\n}) => {\n  const div = useRef<HTMLDivElement>(null);\n  const [shownClass, setShownClass] = useState<\"workflow-step-shown\" | \"opacity-0\">(\"opacity-0\");\n\n  useEffect(() => {\n    if (!div.current || !window) return;\n    const divBottom = div.current.getBoundingClientRect().bottom;\n\n    if (window.innerHeight > divBottom) setShownClass(\"workflow-step-shown\");\n  }, [scroll]);\n\n  const {\n    html,\n    frontmatter: { title },\n  } = step;\n\n  return (\n    <div\n      ref={div}\n      className={`workflow-step relative flex w-full items-center justify-between text-secondary-100 gap-5 md:gap-28 max-w-4.5xl ${className} ${shownClass}`}\n    >\n      <p className=\"text-center px-5 md:px-20 text-[88px] sm:text-[148px] font-bold shrink-0 py-4 text-primary-70\">\n        {stepNumber}\n      </p>\n      <div className=\"flex flex-col flex-1 gap-2.5\">\n        <h2 className=\"font-bold text-2xl sm:text-3xl\">{title}</h2>\n        <div\n          className=\"w-full font-normal text-lg\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowStep;\n","import React from \"react\";\n\nimport { IWhyUsReason } from \"../../types/whyUs.type\";\n\nconst WhyUsReason = ({\n  reason: {\n    frontmatter: { title },\n    html,\n  },\n  className,\n}: {\n  reason: IWhyUsReason;\n  className?: string;\n}) => {\n  return (\n    <div\n      className={`group why-us-card relative flex flex-col text-secondary-100 gap-2.5 cursor-pointer break-inside-avoid h-max ${className}`}\n    >\n      <h3 className=\"text-3xl\">{title}</h3>\n      <div\n        className={`text-lg text-secondary-100`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <div\n        className={`line w-1 h-0 bg-secondary-100 absolute top-1/2 -left-5 -translate-y-1/2 transition-all duration-500 break-inside-avoid group-hover:h-full`}\n      />\n    </div>\n  );\n};\n\nexport default WhyUsReason;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { IWhyUsQueryResult, IWhyUsReason } from \"../../types/whyUs.type\";\nimport { ILang, Theme } from \"../../types/common.type\";\n\nimport TemplateSection from \"../common/templateSection\";\nimport WhyUsReason from \"./whyUsReason\";\n\nconst WhyUsSection = ({ lang }: ILang) => {\n  const whyUsQueryData = useStaticQuery(query) as IWhyUsQueryResult;\n\n  let whyUsReasons: IWhyUsReason[] | null | undefined;\n  if (lang in whyUsQueryData)\n    whyUsReasons = whyUsQueryData?.[lang]?.nodes as\n      | IWhyUsReason[]\n      | null\n      | undefined;\n  else whyUsQueryData?.en?.nodes;\n\n  const sectionTitle =\n    whyUsQueryData?.markupData?.nodes?.find(\n      (node) => node.fields.language === lang\n    )?.frontmatter?.whyUs?.title ?? \"why us\";\n\n  return (\n    <>\n      {whyUsReasons?.length ? (\n        <TemplateSection theme={Theme.dark} title={sectionTitle}>\n          <div className=\"flex flex-col md:flex-row gap-y-5 w-full gap-x-28 max-w-4.5xl\">\n            <div className=\"flex flex-1 flex-col gap-y-5 md:gap-y-14 justify-start\">\n              {whyUsReasons.map(\n                (reason, i) =>\n                  i % 2 === 0 && <WhyUsReason key={reason.id} reason={reason} />\n              )}\n            </div>\n            <div className=\"flex flex-1 flex-col gap-y-5 md:gap-y-14 justify-start\">\n              {whyUsReasons.map(\n                (reason, i) =>\n                  i % 2 != 0 && <WhyUsReason key={reason.id} reason={reason} />\n              )}\n            </div>\n          </div>\n        </TemplateSection>\n      ) : null}\n    </>\n  );\n};\n\nexport default WhyUsSection;\n\nconst query = graphql`\n  {\n    en: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"whyUs\" }, language: { eq: \"en\" } }\n      }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        id\n        html\n        frontmatter {\n          title\n        }\n        fields {\n          language\n        }\n      }\n    }\n    ru: allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"whyUs\" }, language: { eq: \"ru\" } }\n      }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        id\n        html\n        frontmatter {\n          title\n        }\n        fields {\n          language\n        }\n      }\n    }\n    markupData: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"common\" } } }\n      sort: { frontmatter: { order: ASC } }\n    ) {\n      nodes {\n        fields {\n          language\n        }\n        frontmatter {\n          whyUs {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { HeadFC, HeadProps, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport {\n  IWorkflowPageContext,\n  IWorkflowStepsQueryResult,\n} from \"../types/workflow.type\";\n\nimport Banner from \"../components/common/banner\";\nimport ContentContainer from \"../components/common/contentContainer\";\nimport WorkflowStep from \"../components/workflow/workflowStep\";\nimport WhyUsSection from \"../components/whyUs/whyUsSection\";\nimport { HeadSeo } from \"../components/common/metadata\";\nimport ContactFormSection from \"../components/forms/contactFormSection\";\n\nconst Workflow = ({\n  data,\n  pageContext: { markupData, lang },\n}: PageProps<IWorkflowStepsQueryResult, IWorkflowPageContext>) => {\n  const workflowSteps = data.allMarkdownRemark.nodes;\n\n  const isInitial = useRef<boolean>(true);\n  const [scroll, setScroll] = useState<boolean>(false);\n\n  const scrollHandler = () => {\n    setScroll((scroll) => !scroll);\n  };\n\n  useEffect(() => {\n    if (!isInitial.current || !window) return;\n    isInitial.current = false;\n\n    window.addEventListener(\"scroll\", scrollHandler);\n\n    return () => window.removeEventListener(\"scroll\", scrollHandler);\n  }, []);\n\n  return (\n    <>\n      <Banner\n        heightClass=\"lg:h-32\"\n        titleBlockClassName=\"w-full\"\n        title={markupData.bannerTitle}\n      />\n      <div>\n        <ContentContainer className=\"flex-col items-center relative py-16 gap-5 sm:gap-0\">\n          {workflowSteps\n            ? workflowSteps.map((step, i) => (\n                <WorkflowStep\n                  key={step.id}\n                  step={step}\n                  className=\"even:flex-row-reverse\"\n                  scroll={scroll}\n                  stepNumber={i + 1}\n                />\n              ))\n            : null}\n        </ContentContainer>\n      </div>\n      <WhyUsSection lang={lang} />\n      <ContactFormSection lang={lang} />\n    </>\n  );\n};\n\nexport default Workflow;\n\nexport const Head: HeadFC<IWorkflowStepsQueryResult, IWorkflowPageContext> = ({\n  pageContext: { markupData, site, lang },\n  location,\n}: HeadProps<IWorkflowStepsQueryResult, IWorkflowPageContext>) => (\n  <HeadSeo\n    title={`${markupData.head} | ${markupData.bannerTitle.toUpperCase()}`}\n    description={site.description}\n    siteUrl={site.siteUrl}\n    path={location.pathname}\n    lang={lang}\n  />\n);\n\nexport const query = graphql`\n  query ($lang: String) {\n    allMarkdownRemark(\n      filter: {\n        fields: { sourceName: { eq: \"workflow\" }, language: { eq: $lang } }\n      }\n      sort: { frontmatter: { step: ASC } }\n    ) {\n      nodes {\n        id\n        html\n        frontmatter {\n          title\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { PropsWithChildren } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { Theme } from \"../../types/common.type\";\n\nimport Border from \"../../assets/common/border.svg\";\n\nimport ContentContainer from \"./contentContainer\";\n\ninterface ITemplateSectionProps extends React.HTMLAttributes<HTMLElement> {\n  title: string;\n  theme: Theme;\n  isArrowLink?: boolean;\n  linkTitle?: string;\n  subTitle?: string;\n  section?: string;\n  className?: string;\n  borderT?: boolean;\n  borderB?: boolean;\n}\n\nconst TemplateSection = ({\n  section,\n  theme,\n  title,\n  linkTitle,\n  subTitle,\n  className,\n  children,\n  borderT,\n  borderB,\n  isArrowLink = true,\n  ...attr\n}: PropsWithChildren<ITemplateSectionProps>) => {\n  const mainColorClass =\n    theme === Theme.dark ? \"text-secondary-100\" : \"text-main-100\";\n  const linkColorClass =\n    theme === Theme.dark\n      ? \"text-secondary-100 hover:text-secondary-70\"\n      : \"text-main-100 hover:text-main-10\";\n\n  return (\n    <>\n      {borderT ? <Border className=\"w-full\" /> : null}\n      <section\n        className={`w-full py-16 bg-transparent ${className}`}\n        {...attr}\n      >\n        <ContentContainer\n          maxWidthClass=\"max-w-[1280px]\"\n          className={`flex-col items-center ${mainColorClass}`}\n        >\n          <div className=\"flex justify-between w-full sm:items-center pb-8 sm:pb-14 flex-col sm:flex-row gap-5\">\n            <h2 className={`text-4xl font-bold flex-1 ${mainColorClass}`}>\n              {title.toUpperCase()}\n            </h2>\n            {section ? (\n              <Link\n                to={`/${section}`}\n                className={`w-full sm:w-auto text-start sm:text-end text-xl font-normal cursor-pointer whitespace-nowrap ${linkColorClass}`}\n              >\n                {linkTitle ? linkTitle.toUpperCase() : \"DISCOVER MORE\"}{\" \"}\n                {isArrowLink ? <>&#8594;</> : null}\n              </Link>\n            ) : null}\n            {subTitle ? (\n              <p\n                className={`w-full sm:w-auto flex-1 text-start sm:text-end text-xl font-normal ${mainColorClass}`}\n              >\n                {subTitle.toUpperCase()}\n              </p>\n            ) : null}\n          </div>\n          {children}\n        </ContentContainer>\n      </section>\n      {borderB ? <Border className=\"w-full\" /> : null}\n    </>\n  );\n};\n\nexport default TemplateSection;\n"],"names":["_ref","step","scroll","stepNumber","className","div","useRef","shownClass","setShownClass","useState","useEffect","current","window","divBottom","getBoundingClientRect","bottom","innerHeight","html","frontmatter","title","___EmotionJSX","ref","dangerouslySetInnerHTML","__html","reason","_whyUsQueryData$lang","_whyUsQueryData$en","_whyUsQueryData$marku","_whyUsQueryData$marku2","_whyUsQueryData$marku3","_whyUsQueryData$marku4","_whyUsQueryData$marku5","_whyUsQueryData$marku6","_whyUsReasons","lang","whyUsQueryData","useStaticQuery","query","whyUsReasons","nodes","en","sectionTitle","markupData","find","node","fields","language","whyUs","React","length","TemplateSection","theme","Theme","dark","map","i","WhyUsReason","key","id","data","pageContext","workflowSteps","allMarkdownRemark","isInitial","setScroll","scrollHandler","addEventListener","removeEventListener","Banner","heightClass","titleBlockClassName","bannerTitle","ContentContainer","WorkflowStep","WhyUsSection","ContactFormSection","Head","_ref2","site","location","HeadSeo","head","toUpperCase","description","siteUrl","path","pathname","section","linkTitle","subTitle","children","borderT","borderB","isArrowLink","attr","mainColorClass","linkColorClass","Border","_extends","maxWidthClass","Link","to"],"sourceRoot":""}